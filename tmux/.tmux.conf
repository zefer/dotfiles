# https://wiki.archlinux.org/index.php/Tmux

# Enable native Mac OS X copy/paste
set  -g default-command "/usr/local/bin/fish -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
set  -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
setw -g xterm-keys on
setw -g mode-keys vi

# no delay after pressing escape, so vim isn't painful
set -sg escape-time 0

# large scrollback
set-option -g history-limit 10000

# change control key
unbind-key C-b
set -g prefix C-a

# number windows & panes from 1 not 0
set  -g base-index 1
setw -g pane-base-index 1

# control automatic window renaming
setw -g automatic-rename off

# reload config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# copy & paste within tmux
# http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future
# https://github.com/tmux/tmux/issues/592#issuecomment-255763680
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

# move around panes with hjkl
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-o run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-o') || tmux select-pane -l"

# resize panes like vim
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5

# split panes that use the same path
bind | split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
# new window that uses the same path
bind c new-window -c "#{pane_current_path}"

bind C-a send-prefix

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# status bar
setw -g monitor-activity on
set  -g visual-activity on
set  -g status-justify centre
set  -g status-left-length 40
set  -g status-left "#[fg=cyan]#S"
set  -g status-right "#(battery Discharging) #[fg=cyan]%d %b %R"
# status bar colours
setw -g status-style fg=white,bg=black 
setw -g window-status-style fg=cyan,bg=default,dim
setw -g window-status-current-style fg=white,bg=red,bright
# split pane colours
set -g pane-border-style fg=colour236,bg=black
set -g pane-active-border-style fg=colour236,bg=black
# command line colours
set -g message-style fg=white,bg=black,bright

